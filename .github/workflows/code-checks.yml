name: "Code Checks"

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]
  schedule:
    - cron: "0 0 * * *"

permissions:
  contents: read
  packages: read

env:
  FORCE_COLOR: 1

jobs:
  common-code-checks:
    name: Common Code Checks
    permissions:
      contents: read
      actions: read
      pull-requests: write
      security-events: write
    uses: JackPlowman/reusable-workflows/.github/workflows/common-code-checks.yml@639c12c2577f6827f84007833ac49fb62ddd0e68 # v2025.08.28.01
    secrets:
      workflow_github_token: ${{ secrets.GITHUB_TOKEN }}

  run-python-tests-lint-checks:
    name: Run Python Tests Lint Checks
    runs-on: ubuntu-latest
    permissions:
      statuses: write
      security-events: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Set up dependencies
        uses: ./.github/actions/setup-tests-dependencies
      - name: Generate Ruff Sarif
        run: just tests::ruff-lint-check
        env:
          RUFF_OUTPUT_FORMAT: "sarif"
          RUFF_OUTPUT_FILE: "ruff-results.sarif"
        continue-on-error: true
      - name: Upload Ruff analysis results to GitHub
        uses: github/codeql-action/upload-sarif@51f77329afa6477de8c49fc9c7046c15b9a4e79d # v3.29.5
        with:
          sarif_file: tests/ruff-results.sarif
          wait-for-processing: true
      - name: Check Python Code Linting (Ruff)
        run: just tests::ruff-lint-check
        env:
          RUFF_OUTPUT_FORMAT: "github"

  run-python-tests-format-checks:
    name: Run Python Tests Format Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Set up dependencies
        uses: ./.github/actions/setup-tests-dependencies
      - name: Check Python Code Format (Ruff)
        run: just tests::ruff-format-check
        env:
          RUFF_OUTPUT_FORMAT: "github"

  run-python-tests-type-checks:
    name: Run Python Tests Type Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Set up dependencies
        uses: ./.github/actions/setup-tests-dependencies
      - name: Check Python Code Types (ty) Checks
        run: just tests::ty-check

  run-python-tests-lockfile-check:
    name: Run Python Tests Lockfile Check
    runs-on: ubuntu-latest
    permissions:
      statuses: write
      security-events: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Set up dependencies
        uses: ./.github/actions/setup-tests-dependencies
      - name: Check UV Lockfile
        run: just tests::uv-lock-check

  sonarcloud-scan:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@8c71dc039c2dd71d3821e89a2b58ecc7fee6ced9 # v5.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  codeql-checks:
    name: CodeQL Analysis
    permissions:
      contents: read
      security-events: write
    strategy:
      matrix:
        language: [actions]
    uses: JackPlowman/reusable-workflows/.github/workflows/codeql-analysis.yml@639c12c2577f6827f84007833ac49fb62ddd0e68 # v2025.08.28.01
    with:
      language: ${{ matrix.language }}

  schema-validation:
    name: Schema Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Set up dependencies
        uses: ./.github/actions/setup-tests-dependencies
      - name: Copy config to schema validation directory
        run: cp github-pages/config.json tests/schema_validation
      - name: Validate Config against schema
        run: just tests::validate-schema
